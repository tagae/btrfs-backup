#!/bin/bash

# Â© 2015 Sebastian Gonzalez
# http://www.apache.org/licenses/LICENSE-2.0

this=$(realpath "$0" || echo "Please install GNU coreutils" >&2)
scripts=$(dirname "$this")

source "$scripts/btrfs-backup-lib.sh"

usage() {
    cat >&2 <<EOF
Usage: $script <pool> <store>

Copies all subvolumes from <pool> to <store>.

Example: $script /var/backup/home /mnt/external/backup/home
EOF
    exit 1
}

(( $# == 2 )) || usage
pool=$(realpath "$1")
store=$(realpath "$2")

use-pool "$pool"
use-pool "$store"

if [ -t 2 ] && command -v bar >/dev/null; then
    progress=bar
else
    progress=cat
fi

# btrfs quirk: the subvolumes used with 'send' must physically be on disk.
sync

# For incremental sending, find most recent subvolume in $store with
# a parent in $pool, and store it in $previous. In passing, find
# most recent subvolume and store it in $last.
while read subvolume; do
    name=$(basename "$subvolume")

    if [ ! -d "$store/$name" ]; then

        echo "Copying subvolume $name to $store${previous:+ incrementally}"

        inProgress=$store/$name

        ionice -c3 btrfs send ${previous:+-p "$pool/$previous"} "$subvolume" | \
            $progress | ionice -c3 btrfs receive "$store"

        unset inProgress
    fi

    previous=$name

done < <(list-subvolumes "$pool")
